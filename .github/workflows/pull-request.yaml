name: Terraform Plan on PR

on:
  pull_request:

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: üîß Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
      
      - name: üïµÔ∏è Debug AWS Access Key
        run: |
          echo "AWS Access Key: $AWS_ACCESS_KEY_ID"
          echo "AWS Secret Key: $AWS_SECRET_ACCESS_KEY"
      
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-south-1

      - name: Debug AWS Credentials
        run: |
          aws sts get-caller-identity

      - name: üì¶ Terraform Init
        run: terraform init

      - name: üìä Terraform Plan
        run: terraform plan -out=tfplan

      - name: üì¢ Post Plan Results on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { execSync } = require('child_process');
            let planOutput;
            try {
              planOutput = execSync('terraform show -no-color tfplan', { encoding: 'utf8' });
            } catch (error) {
              console.error('Error running terraform show:', error.message);
              process.exit(1);
            }
            const summary = `
            ### Terraform Plan Summary
            \`\`\`
            ${planOutput}
            \`\`\`
            `;
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
